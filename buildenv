# bump: protobuf-version /PROTOBUF_VERSION="(.*)"/ https://github.com/protocolbuffers/protobuf.git|semver:*
PROTOBUF_VERSION="28.3"

export ZOPEN_BUILD_LINE="STABLE"
export ZOPEN_STABLE_URL="https://github.com/protocolbuffers/protobuf.git"
export ZOPEN_STABLE_TAGS="v${PROTOBUF_VERSION}"
export ZOPEN_STABLE_DEPS="zoslib make cmake coreutils"
export ZOPEN_DEV_URL="https://github.com/protocolbuffers/protobuf.git"
export ZOPEN_DEV_DEPS="zoslib make cmake coreutils"
export ZOPEN_CLONE_SUBMODULES=yes
export ZOPEN_COMP="CLANG"
export ZOPEN_EXTRA_CFLAGS="-O0" # Avoid compiler abend
export ZOPEN_EXTRA_CXXFLAGS="-O0" # Avoid compiler abend

export ZOPEN_CONFIGURE="cmake"
export ZOPEN_CONFIGURE_OPTS="-Dprotobuf_BUILD_SHARED_LIBS=OFF -Dprotobuf_BUILD_TESTS=OFF -B ../build --install-prefix \$ZOPEN_INSTALL_DIR/ ."

export ZOPEN_MAKE="cmake"
export ZOPEN_MAKE_OPTS="--build ../build --parallel \$ZOPEN_NUM_JOBS"
export ZOPEN_MAKE_MINIMAL=Y

export ZOPEN_INSTALL="cmake"
export ZOPEN_INSTALL_OPTS="--install ../build"

zopen_pre_patch()
{
  rm third_party/abseil-cpp/.git
  git add third_party/abseil-cpp/
  git commit -m "Add third part module"
}

zopen_check_results()
{
  dir="$1"
  pfx="$2"
  chk="$1/$2_check.log"

  # Echo the following information to gauge build health
  echo "actualFailures:0"
  echo "totalTests:1"
  echo "expectedFailures:0"
  echo "expectedTotalTests:1"
}

zopen_append_to_env()
{
  # echo envars outside of PATH, MANPATH, LIBPATH
}

zopen_append_to_setup()
{
  # echo commands that will run when installing via setup.sh
}

zopen_get_version()
{
  echo "${PROTOBUF_VERSION}"
}
